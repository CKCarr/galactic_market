version: '3.8'

services:

  backend:
    build:
      context: ./backend
      dockerfile: ./Docker/Dockerfile
    env_file:
      - ./backend/env/.env.app
      - ./backend/env/.env.mysql
    volumes:
      - ./backend:/galactic_destinations/backend
    ports:
      - "3000:3000"
      - "9229:9229"
    depends_on:
      - mysql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "node -e 'require(\"http\").createServer((req, res) => res.end()).listen(3000)'"
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - backend

  mysql:
    image: mysql:8.0
    env_file:
      - ./backend/env/.env.app
      - ./backend/env/.env.mysql
    ports:
      - 3306:3306
    volumes:
      - mysqldata:/var/lib/mysql
      - ./backend/config/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf
      - ./backend/config/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 30s
      retries: 10
    networks:
      - backend

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Docker/Dockerfile
    ports:
      - 4321:4321
    volumes:
      - ./frontend:/galactic_destinations/frontend
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  mysqldata: {}
